services:
  incnv-frontend:
    image: saowwapark/incnv-frontend:2.5.0
    container_name: incnv-frontend
    restart: always
    networks:
      - incnv-network
    ports:
      - ${FRONTEND_DOCKER_PORT}
    environment:
      - FRONTEND_PORT=${FRONTEND_DOCKER_PORT}
    command: /bin/sh -c "envsubst '$${FRONTEND_PORT}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
  
  incnv-backend:
    image: saowwapark/incnv-backend:2.3.1
    container_name: incnv-backend
    restart: always
    environment:
      - NODE_ENV=prod
      - PORT=${BACKEND_DOCKER_API_PORT}
      - HOST=0.0.0.0
      - DB_HOST=${DATABASE_HOST}
      - DB_PORT=${DATABASE_DOCKER_PORT}
      - DB_USER=${DATABASE_USER_NAME}
      - DB_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - ${BACKEND_EXTERNAL_API_PORT}:${BACKEND_DOCKER_API_PORT}
    networks:
      - incnv-network
    volumes:
      - datasources-volume:/usr/app/dist/volumes/datasources_volume
    depends_on:
      incnv-databases:
        condition: service_healthy
  incnv-databases:
    image: mysql:8
    container_name: incnv-databases
    restart: always
    networks:
      - incnv-network
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - databases-volume:/var/lib/mysql
    ports:
      - ${DATABASE_EXTERNAL_PORT}:${DATABASE_DOCKER_PORT}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost","-u","root","--password=${DATABASE_PASSWORD}"]
      timeout: 20s
      retries: 10
  incnv-reverse-proxy:
    image: nginx:latest
    container_name: incnv-reverse-proxy
    restart: always
    networks:
      - incnv-network
    depends_on:
      incnv-databases:
        condition: service_healthy
    ports:
      - ${NGINX_EXTERNAL_PORT}:${NGINX_PORT}
    volumes:
      - ./reverse-proxy-nginx.conf.template:/etc/nginx/reverse-proxy-nginx.conf.template
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - FRONTEND_DOCKER_PORT=${FRONTEND_DOCKER_PORT}
      - BACKEND_DOCKER_API_PORT=${BACKEND_DOCKER_API_PORT}
    command: /bin/sh -c "envsubst '$${NGINX_PORT} $${FRONTEND_DOCKER_PORT} $${BACKEND_DOCKER_API_PORT}' < /etc/nginx/reverse-proxy-nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

volumes:
  databases-volume:
  datasources-volume:

networks:
  incnv-network: {}